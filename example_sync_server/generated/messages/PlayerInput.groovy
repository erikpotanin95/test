// automatically generated by the FlatBuffers compiler, do not modify

package messages;
import com.skillz.server.Message;
import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class PlayerInput extends Message {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public PlayerInput get(ByteBuffer _bb) { return get(_bb, new PlayerInput()); }
  public PlayerInput get(ByteBuffer _bb, PlayerInput obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public PlayerInput __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short opcode() { int o = __offset(4); return o != 0 ? bb.getShort(o + bb_pos) : 13; }
  public int newScore() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String newBoard() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer newBoardAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer newBoardInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }

  public static int createPlayerInput(FlatBufferBuilder builder,
      short opcode,
      int newScore,
      int newBoardOffset) {
    builder.startTable(3);
    PlayerInput.addNewBoard(builder, newBoardOffset);
    PlayerInput.addNewScore(builder, newScore);
    PlayerInput.addOpcode(builder, opcode);
    return PlayerInput.endPlayerInput(builder);
  }

  public static void startPlayerInput(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addOpcode(FlatBufferBuilder builder, short opcode) { builder.addShort(0, opcode, 13); }
  public static void addNewScore(FlatBufferBuilder builder, int newScore) { builder.addInt(1, newScore, 0); }
  public static void addNewBoard(FlatBufferBuilder builder, int newBoardOffset) { builder.addOffset(2, newBoardOffset, 0); }
  public static int endPlayerInput(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public PlayerInput get(int j) { return get(new PlayerInput(), j); }
    public PlayerInput get(PlayerInput obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

